package de.aidger.view.forms;

import static de.aidger.utils.Translation._;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

import de.aidger.model.models.Assistant;
import de.aidger.model.models.Course;
import de.aidger.model.models.Employment;
import de.aidger.view.UI;
import de.aidger.view.forms.HourlyWageEditorForm.Qualification;
import de.aidger.view.models.ListModel;
import de.aidger.view.models.UICourse;
import de.aidger.view.models.ListModel.ListModelType;
import de.aidger.view.tabs.DetailViewerTab;
import de.aidger.view.tabs.ViewerTab.DataType;
import de.unistuttgart.iste.se.adohive.exceptions.AdoHiveException;
import de.unistuttgart.iste.se.adohive.model.ICourse;

/**
 * A form used for viewing assistants in detail.
 * 
 * @author aidGer Team
 */
@SuppressWarnings("serial")
public class AssistantViewerForm extends Form {

    /**
     * Constructs an assistant viewer form.
     * 
     * @param assistant
     *            The assistant who will be displayed
     */
    public AssistantViewerForm(Assistant assistant) {
        initComponents();

        listCourses.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent evt) {
                UI.getInstance().addNewTab(
                    new DetailViewerTab(DataType.Course, (Course) listCourses
                        .getSelectedValue()));
            }
        });

        firstName.setText(assistant.getFirstName());
        lastName.setText(assistant.getLastName());
        email.setText(assistant.getEmail());
        qualification.setText(Qualification.valueOf(
            assistant.getQualification()).toString());

        try {
            List<Employment> employments = (new Employment())
                .getEmployments(assistant);

            ListModel listCoursesModel = new ListModel(ListModelType.List,
                DataType.Course);

            for (Employment employment : employments) {
                ICourse c = (new Course()).getById(employment.getCourseId());

                Course course = new UICourse(c);

                if (!listCoursesModel.contains(course)) {
                    listCoursesModel.addElement(course);
                }
            }

            listCourses.setModel(listCoursesModel);
            listModels.add(listCoursesModel);
        } catch (AdoHiveException e) {
        }

        if (listCourses.getModel().getSize() == 0) {
            courses.setVisible(false);
        }

        if (listActivities.getModel().getSize() == 0) {
            activities.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblQualification = new javax.swing.JLabel();
        firstName = new javax.swing.JLabel();
        lastName = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        qualification = new javax.swing.JLabel();
        filler = new javax.swing.JLabel();
        courses = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        listCourses = new javax.swing.JList();
        activities = new javax.swing.JPanel();
        scrollPane2 = new javax.swing.JScrollPane();
        listActivities = new javax.swing.JList();

        setLayout(new java.awt.GridBagLayout());

        lblFirstName.setText(_("First Name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(lblFirstName, gridBagConstraints);

        lblLastName.setText(_("Last Name"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(lblLastName, gridBagConstraints);

        lblEmail.setText(_("Email"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(lblEmail, gridBagConstraints);

        lblQualification.setText(_("Qualification"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(lblQualification, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(firstName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(lastName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(email, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(qualification, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 1.0;
        add(filler, gridBagConstraints);

        courses.setBorder(javax.swing.BorderFactory.createTitledBorder(
            javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1),
            _("Related courses")));
        courses.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0,
            0));

        listCourses.setMinimumSize(new java.awt.Dimension(300, 150));
        listCourses.setPreferredSize(new java.awt.Dimension(300, 150));
        scrollPane.setViewportView(listCourses);

        courses.add(scrollPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(courses, gridBagConstraints);

        activities.setBorder(javax.swing.BorderFactory.createTitledBorder(
            javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1),
            _("Related activities")));
        activities.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT,
            0, 0));

        listActivities.setMinimumSize(new java.awt.Dimension(300, 150));
        listActivities.setPreferredSize(new java.awt.Dimension(300, 150));
        scrollPane2.setViewportView(listActivities);

        activities.add(scrollPane2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        add(activities, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activities;
    private javax.swing.JPanel courses;
    private javax.swing.JLabel email;
    private javax.swing.JLabel filler;
    private javax.swing.JLabel firstName;
    private javax.swing.JLabel lastName;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblQualification;
    private javax.swing.JList listActivities;
    private javax.swing.JList listCourses;
    private javax.swing.JLabel qualification;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JScrollPane scrollPane2;
    // End of variables declaration//GEN-END:variables

}
