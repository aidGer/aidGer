package de.aidger.view.reports;

import static de.aidger.utils.Translation._;

import java.util.List;

import javax.swing.table.DefaultTableModel;

import de.aidger.model.models.Assistant;
import de.aidger.model.models.Employment;
import de.aidger.model.reports.BalanceCourse;
import de.unistuttgart.iste.se.adohive.model.IAssistant;
import de.unistuttgart.iste.se.adohive.model.ICourse;
import de.unistuttgart.iste.se.adohive.model.IEmployment;

/**
 * A JPanel which has the courses of a group in it.
 * 
 * @author aidGer Team
 */
@SuppressWarnings("serial")
public class BalanceReportGroupCreator extends javax.swing.JPanel {

    /**
     * The name of the group.
     */
    private final String group;

    /**
     * The table model of the content table.
     */
    private final DefaultTableModel groupTableModel = new DefaultTableModel(
        null, new String[] { "java.lang.Object@38f3cbe6",
                "java.lang.Object@38f3cbe6", "java.lang.Object@38f3cbe6",
                "java.lang.Object@38f3cbe6", "java.lang.Object@38f3cbe6",
                "java.lang.Object@38f3cbe6", "java.lang.Object@38f3cbe6",
                "java.lang.Object@38f3cbe6" }) {
        boolean[] canEdit = new boolean[] { false, false, false, false, false,
                false, false, false };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    /**
     * Initializes a new BalanceReportGroupCreator and adds the table for
     * displaying the courses.
     * 
     * @param group
     *            The name of the group.
     */
    public BalanceReportGroupCreator(String group, ICourse course) {
        this.group = group;
        initComponents();
        contentPanel.add(contentTable.getTableHeader(),
            java.awt.BorderLayout.NORTH);
        addCourse(course);
    }

    /**
     * Adds a course to the table.
     * 
     * @param course
     *            The course to be added to the table.
     */
    public void addCourse(ICourse course) {
        BalanceCourse balanceCourse = new BalanceCourse();
        balanceCourse.setTitle(course.getDescription());
        balanceCourse.setPart(course.getPart());
        balanceCourse.setLecturer(course.getLecturer());
        balanceCourse.setTargetAudience(course.getTargetAudience());
        double plannedAWS = 0;
        double basicAWS = course.getNumberOfGroups()
                * course.getUnqualifiedWorkingHours();
        balanceCourse.setBasicAWS(basicAWS);
        int studentFees = 0;
        int resources = 0;
        List<IEmployment> employments = null;
        List<IAssistant> assistants = null;
        try {
            employments = (new Employment()).getAll();
            assistants = (new Assistant()).getAll();
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        for (IEmployment employment : employments) {
            if (employment.getCourseId() == course.getId()) {
                //TODO find out int for student fee funds
                if (employment.getFunds() == 0) {
                    for (IAssistant assistant : assistants) {
                        if (employment.getAssistantId() == assistant.getId()) {
                            //TODO change to get correct hourly wage
                            studentFees = studentFees
                                    + (int) (10.0 * employment.getHourCount() * 1.28);
                        }
                    }
                    //TODO find out int for student fee funds
                } else if (employment.getFunds() == 1) {
                    for (IAssistant assistant : assistants) {
                        if (employment.getAssistantId() == assistant.getId()) {
                            //TODO change to get correct hourly wage
                            resources = resources
                                    + (int) (10.0 * employment.getHourCount() * 1.28);
                        }
                    }

                }
                //TODO find out correct calculation
                plannedAWS = plannedAWS + employment.getHourCount();
            }
        }
        balanceCourse.setPlannedAWS(plannedAWS);
        balanceCourse.setStudentFees(studentFees);
        balanceCourse.setResources(resources);
        groupTableModel.addRow(balanceCourse.getCourseObject());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupNameLabel = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        contentTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        groupNameLabel.setText(_("Group") + (" ") + group);
        add(groupNameLabel, java.awt.BorderLayout.PAGE_START);

        contentPanel.setLayout(new java.awt.BorderLayout());

        contentTable.setModel(groupTableModel);
        contentPanel.add(contentTable, java.awt.BorderLayout.CENTER);
        contentTable.getColumnModel().getColumn(0).setHeaderValue(_("Title"));
        contentTable.getColumnModel().getColumn(1).setHeaderValue(_("Part"));
        contentTable.getColumnModel().getColumn(2)
            .setHeaderValue(_("Lecturer"));
        contentTable.getColumnModel().getColumn(3).setHeaderValue(
            _("Target Audience"));
        contentTable.getColumnModel().getColumn(4).setHeaderValue(
            _("Planned AWS"));
        contentTable.getColumnModel().getColumn(5).setHeaderValue(
            _("Basic AWS"));
        contentTable.getColumnModel().getColumn(6).setHeaderValue(
            _("Budget costs from student fees"));
        contentTable.getColumnModel().getColumn(7).setHeaderValue(
            _("Budget costs from resources"));

        add(contentPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTable contentTable;
    private javax.swing.JLabel groupNameLabel;
    // End of variables declaration//GEN-END:variables

}
