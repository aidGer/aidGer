#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\date{\begin{tabular}{rl}Erstellt am: & 10. April 2010 \\ Zuletzt geändert am: & \today \end{tabular}}
\end_preamble
\use_default_options true
\language ngerman
\inputencoding utf8
\font_roman ae
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Entwurf aidGer
\end_layout

\begin_layout Author
Buchgraber (2512046), Gildein (2513744), Pirrung (2526016)
\begin_inset Newline newline
\end_inset

Gruppe 10
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\begin_inset CommandInset label
LatexCommand label
name "cha:Einleitung"

\end_inset


\end_layout

\begin_layout Section
Zweck
\begin_inset CommandInset label
LatexCommand label
name "sec:Zweck"

\end_inset


\end_layout

\begin_layout Standard
Dieses Dokument dient als Richtschnur bei der Entwicklung des Programms.
 Es dokumentiert die grundsätzlichen Überlegungen der Entwickler beim Entwurf
 des Gesamtsystems und seiner Komponenten.
 Darüber hinaus enthält es Beschreibungen der wichtigsten Programmkomponenten
 und Informationen darüber, wie diese miteinander interagieren.
 Diese liegen in textueller Form und als UML-Diagramme vor.
 
\end_layout

\begin_layout Section
Leserkreis
\begin_inset CommandInset label
LatexCommand label
name "sec:Leserkreis"

\end_inset


\end_layout

\begin_layout Standard
Dieses Dokument ist für den folgenden Leserkreis bestimmt:
\end_layout

\begin_layout Itemize
Entwickler des Programms
\end_layout

\begin_layout Itemize
Programmierer, die Wartungsarbeiten am fertigen Programm durchführen
\end_layout

\begin_layout Section
Überblick über dieses Dokument
\begin_inset CommandInset label
LatexCommand label
name "sec:Überblick-über-dieses"

\end_inset


\end_layout

\begin_layout Standard
Der erste Teil dieses Dokuments besteht aus Beschreibungen der verschiedenen,
 beim Entwurf des Programms zur Anwendung gekommenen Prinzipien.
 Darauf aufbauend folgen ein Kapitel später detailliertere Beschreibungen
 von Programmkomponenten und deren Interaktion, was mit UML-Diagrammen näher
 veranschaulicht wird.
\end_layout

\begin_layout Section
Konventionen
\begin_inset CommandInset label
LatexCommand label
name "sec:Konventionen"

\end_inset


\end_layout

\begin_layout Standard
..
\end_layout

\begin_layout Chapter
Grundsätzliche Entwurfsüberlegungen
\begin_inset CommandInset label
LatexCommand label
name "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset


\end_layout

\begin_layout Section
Architektur
\begin_inset CommandInset label
LatexCommand label
name "sec:Architektur"

\end_inset


\end_layout

\begin_layout Standard
Zur Strukturierung der Software aidGer wird das Architekturmuster Model
 View Controller (MVC) eingesetzt.
 Dabei geschieht eine Unterteilung der Struktur in drei Einheiten: Das Datenmode
ll (
\family typewriter
\shape italic
Model
\family default
\shape default
), die Präsentationskomponente (
\family typewriter
\shape italic
View
\family default
\shape default
) und die Programmsteuerung bzw.
 die Business Logik (
\family typewriter
\shape italic
Controller
\family default
\shape default
).
 Die Entkopplung dieser drei Komponenten ist die Basis für einen flexiblen
 Programmentwurf, der eine spätere Änderung oder Erweiterung erleichtert
 und eine Wiederverwendbarkeit der einzelnen Komponenten ermöglicht.
\end_layout

\begin_layout Subsection
Einheiten
\begin_inset CommandInset label
LatexCommand label
name "sub:Einheiten"

\end_inset


\end_layout

\begin_layout Subsubsection
Model
\begin_inset CommandInset label
LatexCommand label
name "sub:Model"

\end_inset


\end_layout

\begin_layout Standard
Das 
\family typewriter
\shape italic
Model
\family default
\shape default
 enthält die darzustellende Daten und ist von der Präsentationskomponente
 und der Programmsteuerung unabhängig.
 Alle 
\family typewriter
\shape italic
Model
\family default
\shape default
-Klassen implementieren ein 
\family typewriter
\shape italic
Observable
\family default
\shape default
-Interface, so dass andere Klassen bei Änderungen am Datenmodell reagieren
 können.
 Jede 
\family typewriter
\shape italic
Model
\family default
\shape default
-Klasse implementiert zudem das jeweilige 
\family typewriter
\shape italic
AdoHiveModel
\family default
\shape default
-Interface aus dem AdoHive Package.
\end_layout

\begin_layout Subsubsection
View
\begin_inset CommandInset label
LatexCommand label
name "sub:View"

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
UI
\family default
 bildet die Hauptkomponente der 
\family typewriter
\shape italic
View
\family default
\shape default
-Domäne.
 Alle 
\family typewriter
\shape italic
View
\family default
\shape default
-Klassen, die zur Anzeige der 
\family typewriter
\shape italic
Model
\family default
\shape default
-Daten dienen, sind Observer des Datenmodells, so dass diese bei Änderungen
 darüber informiert werden.
 Inbesondere gehören 
\family typewriter
\shape italic
Tabs
\family default
\shape default
-Klassen zur 
\family typewriter
\shape italic
View
\family default
\shape default
-Domäne.
\end_layout

\begin_layout Subsubsection
Controller
\begin_inset CommandInset label
LatexCommand label
name "sub:Controller"

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
Application
\family default
 bildet die Hauptkomponente der 
\family typewriter
\shape italic
Controller
\family default
\shape default
-Domäne.
 Sie übernimmt mit der Klasse ActionRegistry die gesamte Steuerung und hat
 daher direkte Verbindungen zum 
\family typewriter
\shape italic
Model
\family default
\shape default
 und 
\family typewriter
\shape italic
View
\family default
\shape default
.
 Sie ist des weiteren die einzige Klasse, die direkten Zugriff auf die Datenbank
 mit Hilfe des 
\family typewriter
\shape italic
AdoHiveControllers
\family default
\shape default
 hat, wodurch Änderungen an der Datenbank nur über den Controller erfolgen
 können.
\end_layout

\begin_layout Subsection
Kommunikation
\begin_inset CommandInset label
LatexCommand label
name "sub:Kommunikation"

\end_inset


\end_layout

\begin_layout Standard
Die einzelnen Einheiten kommunizieren untereinander wie im folgenden Diagramm
 dargestellt:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename design/Architecture.pdf
	display false
	width 100col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Die Architektur mit Hilfe des MVC-Patterns
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Entwurfsmuster
\begin_inset CommandInset label
LatexCommand label
name "sec:Entwurfsmuster"

\end_inset


\end_layout

\begin_layout Standard
Es folgt eine Auflistung aller Entwurfsmuster, die beim Entwurf von aidGer
 zum Einsatz kommen:
\end_layout

\begin_layout Itemize
Singleton (Erzeugungsmuster): Sichere ab, dass eine Klasse genau ein Exemplar
 besitzt und stelle einen globalen Zugriffspunkt darauf bereit.
\end_layout

\begin_layout Itemize
Beobachter / Observer (Verhaltensmuster): Definiere eine 1-zu-n-Abhängigkeit
 zwischen Objekten, so dass die Änderung des Zustands eines Objekts dazu
 führt, dass alle abhängigen Objekte benachrichtigt und automatisch aktualisiert
 werden.
\end_layout

\begin_layout Chapter
Beschreibungen einzelner Programmkomponenten
\begin_inset CommandInset label
LatexCommand label
name "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Section
Das Datenmodell
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-Datenmodell"

\end_inset


\end_layout

\begin_layout Standard
..
\end_layout

\begin_layout Section
Die Präsentationskomponente
\begin_inset CommandInset label
LatexCommand label
name "sec:Die-Präsentationskomponente"

\end_inset


\end_layout

\begin_layout Standard
..
\end_layout

\begin_layout Section
Die Businesslogik
\begin_inset CommandInset label
LatexCommand label
name "sec:Die-Businesslogik"

\end_inset


\end_layout

\begin_layout Standard
..
\end_layout

\begin_layout Section
Hilfsklassen
\begin_inset CommandInset label
LatexCommand label
name "sec:Hilfsklassen"

\end_inset


\end_layout

\begin_layout Standard
..
\end_layout

\begin_layout Chapter
Anhang
\begin_inset CommandInset label
LatexCommand label
name "cha:Anhang"

\end_inset


\end_layout

\begin_layout Section
Versionshistorie
\begin_inset CommandInset label
LatexCommand label
name "sec:Versionshistorie"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.2 (12.04.2010)
\end_layout

\begin_layout Itemize
Verfeinerungen in den Kapiteln 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset

 und  
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.1.1 (11.04.2010)
\end_layout

\begin_layout Itemize
Erstellung des Architektur-Diagramms
\end_layout

\begin_layout Itemize
Erstellung des Kapitels 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.1 (10.04.2010)
\end_layout

\begin_layout Itemize
Erstellung der Grundstruktur dieses Dokuments
\end_layout

\begin_layout Itemize
Erstellung des Kapitels 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset


\end_layout

\end_body
\end_document
