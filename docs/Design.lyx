#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\date{\begin{tabular}{rl}Erstellt am: & 10. April 2010 \\ Zuletzt geändert am: & \today \end{tabular}}
\end_preamble
\use_default_options true
\language ngerman
\inputencoding utf8
\font_roman ae
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Entwurf aidGer
\end_layout

\begin_layout Author
Buchgraber (2512046), Gildein (2513744), Pirrung (2526016)
\begin_inset Newline newline
\end_inset

Gruppe 10
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\begin_inset CommandInset label
LatexCommand label
name "cha:Einleitung"

\end_inset


\end_layout

\begin_layout Section
Zweck
\begin_inset CommandInset label
LatexCommand label
name "sec:Zweck"

\end_inset


\end_layout

\begin_layout Standard
Dieses Dokument dient als Richtschnur bei der Entwicklung des Programms.
 Es dokumentiert die grundsätzlichen Überlegungen der Entwickler beim Entwurf
 des Gesamtsystems und seiner Komponenten.
 Darüber hinaus enthält es Beschreibungen der wichtigsten Programmkomponenten
 und Informationen darüber, wie diese miteinander interagieren.
 Diese liegen in textueller Form und als UML-Diagramme vor.
 
\end_layout

\begin_layout Section
Leserkreis
\begin_inset CommandInset label
LatexCommand label
name "sec:Leserkreis"

\end_inset


\end_layout

\begin_layout Standard
Dieses Dokument ist für den folgenden Leserkreis bestimmt:
\end_layout

\begin_layout Itemize
Entwickler des Programms
\end_layout

\begin_layout Itemize
Programmierer, die Wartungsarbeiten am fertigen Programm durchführen
\end_layout

\begin_layout Section
Überblick über dieses Dokument
\begin_inset CommandInset label
LatexCommand label
name "sec:Überblick-über-dieses"

\end_inset


\end_layout

\begin_layout Standard
Der erste Teil dieses Dokuments besteht aus Beschreibungen der verschiedenen,
 beim Entwurf des Programms zur Anwendung gekommenen Prinzipien.
 Darauf aufbauend folgen ein Kapitel später detailliertere Beschreibungen
 von Programmkomponenten und deren Interaktion, was mit UML-Diagrammen näher
 veranschaulicht wird.
\end_layout

\begin_layout Section
Konventionen
\begin_inset CommandInset label
LatexCommand label
name "sec:Konventionen"

\end_inset


\end_layout

\begin_layout Standard
In diesem Dokument werden die folgenden Konventionen verwendet, um wichtige
 Informationen hervorzuheben:
\end_layout

\begin_layout Itemize
Technische oder stark hervorgehobene Begriffe werden 
\series bold
fett geschrieben
\series default
.
 
\end_layout

\begin_layout Itemize
Normal (im Sinne einer Betonung) hervorgehobene Begriffe werden 
\shape italic
kursiv geschrieben
\shape default
.
 
\end_layout

\begin_layout Itemize
Klassennamen werden in einer 
\family typewriter
Monospace-Schrift hervorgehoben.

\family default
 
\end_layout

\begin_layout Itemize
Interfaces werden in einer 
\family typewriter
\shape italic
kursiven Monospace-Schrift hervorgehoben
\family default
\shape default
.
 
\end_layout

\begin_layout Chapter
Grundsätzliche Entwurfsüberlegungen
\begin_inset CommandInset label
LatexCommand label
name "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset


\end_layout

\begin_layout Section
Architektur
\begin_inset CommandInset label
LatexCommand label
name "sec:Architektur"

\end_inset


\end_layout

\begin_layout Standard
Zur Strukturierung der Software aidGer wird das Architekturmuster Model
 View Controller (
\series bold
MVC
\series default
) eingesetzt.
 Dabei geschieht eine Unterteilung der Struktur in drei Einheiten: Das Datenmode
ll (
\family typewriter
\series bold
Model
\family default
\series default
), die Präsentationskomponente (
\family typewriter
\series bold
View
\family default
\series default
) und die Programmsteuerung bzw.
 die Business Logik (
\family typewriter
\series bold
Controller
\family default
\series default
).
 Die Entkopplung dieser drei Komponenten ist die Basis für einen flexiblen
 Programmentwurf, der eine spätere Änderung oder Erweiterung erleichtert
 und eine Wiederverwendbarkeit der einzelnen Komponenten ermöglicht.
\end_layout

\begin_layout Subsection
Einheiten
\begin_inset CommandInset label
LatexCommand label
name "sub:Einheiten"

\end_inset


\end_layout

\begin_layout Subsubsection
Model
\begin_inset CommandInset label
LatexCommand label
name "sub:Model"

\end_inset


\end_layout

\begin_layout Standard
Das 
\family typewriter
\series bold
Model
\family default
\series default
 enthält die darzustellende Daten und ist von der Präsentationskomponente
 und der Programmsteuerung unabhängig.
 Alle 
\family typewriter
\series bold
Model
\family default
\series default
-Klassen erweitern die 
\family typewriter
AbstractModel
\family default
-Klasse, um die Daten in der Datenbank zu verwalten.
 Jede 
\family typewriter
\series bold
Model
\family default
\series default
-Klasse implementiert zudem das jeweilige 
\family typewriter
\shape italic
AdoHiveModel
\family default
\shape default
-Interface aus dem AdoHive Package.
\end_layout

\begin_layout Subsubsection
View
\begin_inset CommandInset label
LatexCommand label
name "sub:View"

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
UI
\family default
 bildet die Hauptkomponente der 
\family typewriter
\series bold
View
\family default
\series default
-Domäne.
 Alle 
\family typewriter
\series bold
View
\family default
\series default
-Klassen, die zur Anzeige der 
\family typewriter
\series bold
Model
\family default
\series default
-Daten dienen, sind Observer des Datenmodells, so dass diese bei Änderungen
 darüber informiert werden.
 Inbesondere gehören 
\family typewriter
\shape italic
Tabs
\family default
\shape default
-Klassen zur 
\family typewriter
\series bold
View
\family default
\series default
-Domäne.
\end_layout

\begin_layout Subsubsection
Controller
\begin_inset CommandInset label
LatexCommand label
name "sub:Controller"

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
Application
\family default
 bildet die Hauptkomponente der 
\family typewriter
\series bold
Controller
\family default
\series default
-Domäne.
 Sie übernimmt mit der Klasse ActionRegistry die gesamte Steuerung und hat
 daher direkte Verbindungen zum 
\family typewriter
\series bold
Model
\family default
\series default
 und 
\family typewriter
\series bold
View
\family default
\series default
.
 Sie ist des weiteren die einzige Klasse, die direkten Zugriff auf die Datenbank
 mit Hilfe des 
\family typewriter
\shape italic
AdoHiveControllers
\family default
\shape default
 hat, wodurch Änderungen an der Datenbank nur über den Controller erfolgen
 können.
\end_layout

\begin_layout Subsection
Kommunikation
\begin_inset CommandInset label
LatexCommand label
name "sub:Kommunikation"

\end_inset


\end_layout

\begin_layout Standard
Die einzelnen Einheiten kommunizieren untereinander wie im folgenden Diagramm
 dargestellt:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename design/Architecture.pdf
	display false
	width 100col%
	BoundingBox 20bp 300bp 530bp 813bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Die Architektur mit Hilfe des MVC-Patterns
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Entwurfsmuster
\begin_inset CommandInset label
LatexCommand label
name "sec:Entwurfsmuster"

\end_inset


\end_layout

\begin_layout Standard
Es folgt eine Auflistung aller Entwurfsmuster, die beim Entwurf von aidGer
 zum Einsatz kommen:
\end_layout

\begin_layout Itemize

\series bold
Singleton
\series default
 (Erzeugungsmuster): Sichere ab, dass eine Klasse genau ein Exemplar besitzt
 und stelle einen globalen Zugriffspunkt darauf bereit.
\end_layout

\begin_layout Itemize

\series bold
Beobachter / Observer
\series default
 (Verhaltensmuster): Definiere eine 1-zu-n-Abhängigkeit zwischen Objekten,
 so dass die Änderung des Zustands eines Objekts dazu führt, dass alle abhängige
n Objekte benachrichtigt und automatisch aktualisiert werden.
\end_layout

\begin_layout Itemize

\series bold
Kompositum
\series default
 (Strukturmuster): Füge Objekte zu Baumstrukturen zusammen, um Teil-Ganzes-Hiera
rchien zu repräsentieren.
 Die Kompositionsmuster ermöglicht es Klienten, einzelne Objekte sowie Kompositi
onen von Objekten einheitlich zu behandeln.
\end_layout

\begin_layout Itemize

\series bold
Fassade
\series default
 (Strukturmuster): Biete eine einheitliche Schnittstelle zu einer Menge
 von Schnittstellen eines Subsystems.
 Die Fassadenklasse definiert eine abstrakte Schnittstelle, welche die Verwendun
g des Subsystems vereinfacht.
\end_layout

\begin_layout Chapter
Beschreibungen einzelner Programmkomponenten
\begin_inset CommandInset label
LatexCommand label
name "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Section
Das Datenmodell
\begin_inset CommandInset label
LatexCommand label
name "sec:Das-Datenmodell"

\end_inset


\end_layout

\begin_layout Subsection
Die Klasse 
\family typewriter
Runtime
\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
Runtime 
\family default
erlaubt den Zugriff auf die Konfiguration, plattformspezifische Einstellungen
 und die übersetzten Strings für die Benutzeroberfläche.
 Dazu greift sie auf die andere Klassen zu, die diese Funktionalität implementie
ren und von 
\family typewriter
Runtime 
\family default
bei Programmstart initialisiert werden.
\end_layout

\begin_layout Subsection
Die Reportmodels
\end_layout

\begin_layout Standard
Die Reportmodels implementieren alle das Interface 
\family typewriter
\emph on
IReport.
 
\family default
\emph default
Ihren Konstruktoren werden die benötigten Datenmodelle übergeben.
 Sie berechnen das Ergebnis und stellen dies dem View oder dem PDF-Export
 zur Verfügung.
\end_layout

\begin_layout Subsection
Die Modelklassen
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename design/Model.pdf
	display false
	height 80theight%
	BoundingBox 23bp 557bp 566bp 813bp
	clip
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm für die Modelklassen
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Modelklassen implementieren die Model-Interfaces die AdoHive zur Verfügung
 stellt (zB.
 
\family typewriter
\emph on
IAssistant
\family default
\emph default
) und erweitern die Klasse
\family typewriter
 AbstractModel
\family default
.
 Diese erweitert 
\family typewriter
Observable 
\family default
und stellt Methoden zur Verwaltung der Daten in der Datenbank bereit, zB.
 zum Speichern des Models oder dem Löschen aus der Datenbank.
\begin_inset Newline newline
\end_inset

Um auf die Datenbank zugreifen zu können nutzen die Models die 
\family typewriter
DatabaseWrapper 
\family default
Klasse, die die einzelnen AdoHive Manager Klassen zur einfachen Nutzung
 abstrahiert.
\end_layout

\begin_layout Section
Die Präsentationskomponente
\begin_inset CommandInset label
LatexCommand label
name "sec:Die-Präsentationskomponente"

\end_inset


\end_layout

\begin_layout Subsection
Die Klasse 
\family typewriter
UI
\end_layout

\begin_layout Standard
Die Klasse UI
\family typewriter
 
\family default
ist eine 
\series bold
Singleton
\series default
-Klasse, die sich um die Verwaltung des Hauptfensters und der darin befindlichen
 Tabs kümmert.
 Zum Hauptfenster gehören dabei die Menüleiste, die Navigation und generell
 die Anzeige der Reiter.
 Bei den Tabs kümmert sie sich um das Öffnen und Schließen und den Inhalt
 der geöffneten Tabs.
\end_layout

\begin_layout Subsection
Die Tabklassen
\end_layout

\begin_layout Standard
Die Tabklassen erweitern entsprechende Swingklassen und repräsentieren die
 Ansicht des jeweiligen Tabs und werden im Hauptfenster eingebettet dargestellt.
 Sie verknüpfen zudem Buttons und andere Bedienelemente mit den entsprechenden
 Actions und Datenmodellen.
 In ihnen werden keine Benutzereingaben ausgewertet.
\end_layout

\begin_layout Subsection
Das UI-Datenmodel
\end_layout

\begin_layout Standard
Die UI-Datenmodelle erweitern entsprechende Swing-Model-Klassen und implementier
en das 
\family typewriter
\emph on
Observer
\family default
\emph default
 Interface.
 Ihnen werden zu Beginn alle darzustellenden Elemente übergeben.
 Sie registrieren sich bei diesen als 
\family typewriter
\emph on
Observer 
\family default
\emph default
und aktualisieren ihre Ansicht (über Swingmethoden), falls sich ein Model
 verändern sollte.
\end_layout

\begin_layout Section
Die Programmsteuerung
\begin_inset CommandInset label
LatexCommand label
name "sec:Die-Programmsteuerung"

\end_inset


\end_layout

\begin_layout Subsection
Die Klasse 
\family typewriter
Application
\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
Application
\family default
 ist eine 
\series bold
Singleton
\series default
-Klasse, in der sich unter anderem die 
\series bold
main
\series default
()-Funktion befindet.
 Hier werden auch alle controllerspezifischen Klassen initialisiert sowie
 alle Actionklassen bei der 
\family typewriter
ActionRegistry
\family default
 registriert.
\end_layout

\begin_layout Subsection
Die Klasse 
\family typewriter
ActionRegistry
\end_layout

\begin_layout Standard
Die Klasse 
\family typewriter
ActionRegistry
\family default
 ist eine 
\series bold
Singleton
\series default
-Klasse, in der sich alle Actionklassen registrieren.
 
\series bold
View
\series default
-Klassen können dann auf die Registry zugreifen, um sich Actions entsprechend
 ihrer Funktionalität liefern zu lassen.
\end_layout

\begin_layout Subsection
Die Actionklassen
\end_layout

\begin_layout Standard
Die Actionklassen erweitern die 
\family typewriter
AbstractAction 
\family default
Klasse, die von Swing bereitgestellt wird.
 Sie reagieren auf Benutzerinteraktionen mit dem 
\series bold
View
\series default
 und führen den entsprechenden Befehl aus, indem die 
\emph on
actionPerformed() 
\emph default
überschrieben wird.
 Sie agieren mit dem Datenmodel und der 
\family typewriter
UI
\family default
-Klasse, um den momentanen 
\series bold
View
\series default
 zu wechseln oder mit dem momentanen 
\series bold
View,
\series default
 um diesen zu verändern.
\end_layout

\begin_layout Section
Hilfsklassen
\begin_inset CommandInset label
LatexCommand label
name "sec:Hilfsklassen"

\end_inset


\end_layout

\begin_layout Subsection
PDF-Export
\begin_inset CommandInset label
LatexCommand label
name "sub:PDF-Export"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename design/PDF-Export.pdf
	width 100text%
	BoundingBox 25bp 575bp 500bp 775bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm des PDF-Exports
\end_layout

\end_inset


\end_layout

\end_inset

Für den Export von Berichten in PDF existieren Objekte des 
\family typewriter
\emph on
ReportConverters
\family default
\emph default
.
 Für die verschiedenen Arten von Berichten existiert jeweils eine Kindklasse
 des 
\family typewriter
\shape italic
ReportConverters
\emph on
,
\family default
\emph default
 
\shape default
welche die Informationen des
\shape italic
\emph on
 
\family typewriter
Reports
\family default
 
\shape default
\emph default
in ein Schema umwandelt, aus welchem der 
\family typewriter
\shape italic
\emph on
PDF-Exporter
\family default
 
\shape default
\emph default
mit Hilfe von iText eine PDF-Datei erstellt.
 Der Ablauf sei wie folgt: Der
\shape italic
\emph on
 
\family typewriter
Report
\family default
\emph default
 
\shape default
ruft seinen entsprechenden 
\family typewriter
\emph on
ReportConverter
\family default
\emph default
 auf.
 Dieser liest die Daten und wandelt sie in das für diesen Bericht existierende
 Schema.
 Dieses Schema wird dann an den 
\family typewriter
PDF-Exporter
\family default
 weitergeleitet und in eine PDF-Datei geschrieben.
\end_layout

\begin_layout Subsection
Konfiguration und Übersetzung
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename design/Runtime.pdf
	BoundingBox 75bp 425bp 525bp 750bp
	clip

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm der Konfiguration und der Übersetzung
\end_layout

\end_inset


\end_layout

\end_inset

Die 
\family typewriter
Runtime-Klasse
\family default
 initialisiert zuerst die Klassen 
\family typewriter
Configuration
\family default
 und 
\family typewriter
Translation
\family default
 und leitet danach die verwendeten Funktionen weiter.
 Sollte 
\family typewriter
Translation
\family default
 eine Übersetzung nicht in der momentanen Sprache finden, so greift es auf
 die Standardsprache, welche in der Klasse 
\family typewriter
DefaultTranslation
\family default
 hinterlegt ist, zu.
\end_layout

\begin_layout Section
TODO
\end_layout

\begin_layout Standard
Datenbankwrapper
\end_layout

\begin_layout Chapter
Anhang
\begin_inset CommandInset label
LatexCommand label
name "cha:Anhang"

\end_inset


\end_layout

\begin_layout Section
Versionshistorie
\begin_inset CommandInset label
LatexCommand label
name "sec:Versionshistorie"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.2 (12.04.2010)
\end_layout

\begin_layout Itemize
Verfeinerungen in den Kapiteln 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.1.1 (11.04.2010)
\end_layout

\begin_layout Itemize
Erstellung des Architektur-Diagramms
\end_layout

\begin_layout Itemize
Erstellung des Kapitels 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Beschreibungen-einzelner-Programmkomponenten"

\end_inset


\end_layout

\begin_layout Subsection*
Version 0.1 (10.04.2010)
\end_layout

\begin_layout Itemize
Erstellung der Grundstruktur dieses Dokuments
\end_layout

\begin_layout Itemize
Erstellung des Kapitels 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Grundsätzliche-Entwurfsüberlegungen"

\end_inset


\end_layout

\end_body
\end_document
