/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/*
 * ProtocolPanel.java
 * 
 * Created on 11.06.2010, 17:08:19
 */

package de.aidger.view.tabs;

import static de.aidger.utils.Translation._;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;

import de.aidger.model.reports.ProtocolCreator;

/**
 * This tab displays the activity protocol in a table.
 * 
 * @author Phil
 */
public class ProtocolViewerTab extends Tab {

    /**
     * The table model of the content table.
     */
    private final DefaultTableModel activityTableModel = new DefaultTableModel(
        null, new String[] { _("Affected assistant"), _("Affected course"),
                _("Type"), _("Date"), _("Content"), _("Sender"),
                _("Processer"), _("Remark") }) {
        boolean[] canEdit = new boolean[] { false, false, false, false, false,
                false, false, false };

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
        }
    };

    /**
     * Initializes a new ProtocolViewerTab and registers a change listener to
     * the spinner.
     * 
     * @param protocolCreator
     *            The protocol creator that called this viewer.
     */
    public ProtocolViewerTab(final ProtocolCreator protocolCreator) {
        initComponents();
        daySpinner.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                if ((Integer) daySpinner.getValue() < -1) {
                    daySpinner.setValue(-1);
                }
                protocolCreator.createProtocol();
            }
        });
    }

    /**
     * Removes all the rows from the content table.
     */
    public void clearTable() {
        while (activityTableModel.getRowCount() > 0) {
            activityTableModel.removeRow(0);
        }
    }

    /**
     * Adds an activity to the table.
     * 
     * @param course
     *            The activity to be added to the table.
     */
    public void addActivity(Object[] activity) {
        activityTableModel.addRow(activity);
    }

    /**
     * Returns the value of the spinner.
     * 
     * @return the value of the spinner
     */
    public int getSpinnerValue() {
        return (Integer) daySpinner.getValue();
    }
    
    /**
     * Sets the value of the spinner.
     * 
     * @param value The value to which to set the spinner to.
     */
    public void setSpinnerValue(int value) {
    	daySpinner.setValue(value);
    }

    /*
     * (non-Javadoc)
     * 
     * @see de.aidger.view.tabs.Tab#getTabName()
     */
    @Override
    public String getTabName() {
        return _("Protocol Viewing");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentScrollPane = new javax.swing.JScrollPane();
        contentTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        spinnerLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        daySpinner = new javax.swing.JSpinner();

        setLayout(new java.awt.BorderLayout());

        contentTable.setModel(activityTableModel);
        contentScrollPane.setViewportView(contentTable);

        add(contentScrollPane, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        spinnerLabel.setText(_("Number of days before today to display: "));
        jPanel2.add(spinnerLabel, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.add(daySpinner, java.awt.BorderLayout.LINE_START);

        jPanel1.add(jPanel3, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane contentScrollPane;
    private javax.swing.JTable contentTable;
    private javax.swing.JSpinner daySpinner;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel spinnerLabel;

    // End of variables declaration//GEN-END:variables

}
